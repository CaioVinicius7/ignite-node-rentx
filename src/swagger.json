{
	"openapi": "3.0.0",
	"info": {
		"title": "RentX Documentation",
		"description": "This is an API Rent",
		"version": "1.0.0",
		"contact": {
			"email": "caio1525pereira@gmail.com"
		}
	},
	"paths": {
		"/sessions": {
			"post": {
				"tags": [
					"Authenticate"
				],
				"summary": "Authentication user",
				"description": "Authentication user",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email"
									},
									"password": {
										"type": "string",
										"format": "password"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/Token"
								}
							}
						}
					},
					"400": {
						"description": "Email or password incorrect!"
					}
				}
			}
		},
		"/refresh-token": {
			"post": {
				"tags": [
					"Authenticate"
				],
				"summary": "Get a new token and refresh token",
				"description": "Get a new token and refresh token using refresh token",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"token": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/RefreshToken"
								}
							}
						}
					},
					"400": {
						"description": "Refresh Token does not exists!"
					}
				}
			}
		},
		"/password/forgot": {
			"post": {
				"tags": [
					"Forgot Password"
				],
				"summary": "Send mail to reset forgot password",
				"description": "Send mail to reset forgot password",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/definitions/ForgotPassword"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "User does not exists!"
					}
				}
			}
		},
		"/password/reset": {
			"post": {
				"tags": [
					"Forgot Password"
				],
				"summary": "Reset password",
				"description": "Reset password",
				"parameters": [
					{
						"name": "token",
						"in": "query",
						"description": "Token received by email to reset password",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/definitions/ResetPassword"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Token Invalid! or Token expired!"
					}
				}
			}
		},
		"/users": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Create a new user account",
				"description": "Create a new user account",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/definitions/NewUser"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				}
			}
		},
		"/users/profile": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Get user profile",
				"description": "get authenticate user profile",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/UserProfile"
								}
							}
						}
					}
				}
			}
		},
		"/users/avatar": {
			"patch": {
				"tags": [
					"Users"
				],
				"summary": "Upload user avatar image",
				"description": "Upload user avatar image",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"avatar": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Success"
					}
				}
			}
		},
		"/categories": {
			"post": {
				"tags": [
					"Categories"
				],
				"summary": "Create a category",
				"description": "Create a new category",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									}
								},
								"example": {
									"name": "category name sample",
									"description": "Category description sample"
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Category already exists"
					}
				}
			},
			"get": {
				"tags": [
					"Categories"
				],
				"summary": "List all categories",
				"description": "List all categories",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"description": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/categories/{id}": {
			"delete": {
				"tags": [
					"Categories"
				],
				"summary": "Delete a category",
				"description": "Delete a category",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "category id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					},
					"404": {
						"description": "Category does not exists!"
					}
				}
			}
		},
		"/categories/import": {
			"post": {
				"tags": [
					"Categories"
				],
				"summary": "Upload new category",
				"description": "Upload a new category",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				}
			}
		},
		"/specifications": {
			"post": {
				"tags": [
					"Specifications"
				],
				"summary": "Create a specification",
				"description": "Create a new specification",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/definitions/Specification"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created"
					},
					"500": {
						"description": "Specification already exists!"
					}
				}
			},
			"get": {
				"tags": [
					"Specifications"
				],
				"summary": "List all specifications",
				"description": "List all specifications",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/AllSpecifications"
								}
							}
						}
					}
				}
			}
		},
		"/specifications/{id}": {
			"delete": {
				"tags": [
					"Specifications"
				],
				"summary": "Delete a specification",
				"description": "Delete a specification",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Specification id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					},
					"404": {
						"description": "Specification does not exists!"
					}
				}
			}
		},
		"/cars": {
			"post": {
				"tags": [
					"Cars"
				],
				"summary": "Create a new car",
				"description": "Create a new car",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/definitions/Car"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/CreatedCar"
								}
							}
						}
					},
					"400": {
						"description": "Car already exists!"
					}
				}
			}
		},
		"/cars/images/{id}": {
			"post": {
				"tags": [
					"Cars"
				],
				"summary": "Upload car images",
				"description": "Upload car images",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Car id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"images": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				}
			}
		},
		"/cars/specifications/{id}": {
			"post": {
				"tags": [
					"Cars"
				],
				"summary": "Add car specifications",
				"description": "Add car specifications",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Car id",
						"required": true,
						"schema": {
							"type": "string",
						"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/definitions/CarSpecifications"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/CreatedCarSpecifications"
								}
							}
						}
					}
				}
			}
		},
		"/cars/available": {
			"get": {
				"tags": [
					"Cars"
				],
				"summary": "List all available cars",
				"description": "List all available cars",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/AvailableCars"
								}
							}
						}
					}
				}
			}
		},
		"/rentals": {
			"post": {
				"tags": [
					"Rentals"
				],
				"summary": "Create a new rental",
				"description": "Create a new rental",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"expected_return_date": {
										"type": "string",
										"format": "date-time"
									},
									"car_id": {
										"type": "string",
										"format": "uuid"
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/CreatedRental"
								}
							}
						}
					},
					"400": {
						"description": "Car is unavailable or There's a rental in progress for user! or Invalid return time!"
					}
				}
			}
		},
		"/rentals/devolution/{id}": {
			"post": {
				"tags": [
					"Rentals"
				],
				"summary": "Close the rental",
				"description": "Close the rental",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Rental id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/DevolutionRental"
								}
							}
						}
					},
					"400": {
						"description": "Rentals does not exists!"
					}
				}
			}
		},
		"/rentals/user": {
			"get": {
				"tags": [
					"Rentals"
				],
				"summary": "Get all user rentals",
				"description": "Get all user rentals",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/definitions/AllUserRentals"
								}
							}
						}
					}
				}
			}
		}
	},
	"definitions": {
		"Specification": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				}
			}
		},
		"Car": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"daily_rate": {
					"type": "number"
				},
				"license_plate": {
					"type": "string"
				},
				"fine_amount": {
					"type": "number"
				},
				"brand": {
					"type": "string"
				},
				"category_id": {
					"type": "string",
					"format": "uuid"
				}
			}
		},
		"CreatedCar": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"available": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"daily_rate": {
					"type": "number"
				},
				"license_plate": {
					"type": "string"
				},
				"fine_amount": {
					"type": "number"
				},
				"brand": {
					"type": "string"
				},
				"category_id": {
					"type": "string",
					"format": "uuid"
				},
				"created_at": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"CarSpecifications": {
			"type": "object",
			"properties": {
				"specifications_id": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "uuid"
					}
				}
			}
		},
		"AvailableCars": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"available": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"daily_rate": {
						"type": "number"
					},
					"license_plate": {
						"type": "string"
					},
					"fine_amount": {
						"type": "number"
					},
					"brand": {
						"type": "string"
					},
					"category_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					}
				}
			}
		},
		"CreatedCarSpecifications": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"available": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"daily_rate": {
						"type": "number"
					},
					"license_plate": {
						"type": "string"
					},
					"fine_amount": {
						"type": "number"
					},
					"brand": {
						"type": "string"
					},
					"category_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"specifications": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"format": "uuid"
								},
								"name": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"created_at": {
									"type": "string",
									"format": "date-time"
								}
							}
						}
					}
				}
			}
		},
		"Token": {
			"type": "object",
			"properties": {
				"token": {
					"type": "string"
				},
				"user": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"email": {
							"type": "string",
							"format": "email"
						}
					}
				},
				"refresh_token": {
					"type": "string"
				}
			}
		},
		"RefreshToken": {
			"type": "object",
			"properties": {
				"refresh_token": {
					"type": "string"
				},
				"token": {
					"type": "string"
				}
			}
		},
		"UserProfile": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"name": {
					"type": "string"
				},
				"email": {
					"type": "string",
					"format": "email"
				},
				"avatar": {
					"type": "string",
					"nullable": "true"
				},
				"driver_license": {
					"type": "string"
				},
				"avatar_url": {
					"type": "string",
					"nullable": "true"
				}
			}
		},
		"NewUser": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"email": {
					"type": "string",
					"format": "email"
				},
				"password": {
					"type": "string",
					"format": "password"
				},
				"driver_license": {
					"type": "string"
				}
			}
		},
		"CreatedRental": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"car_id": {
					"type": "string",
					"format": "uuid"
				},
				"user_id": {
					"type": "string",
					"format": "uuid"
				},
				"expected_return_date": {
					"type": "string",
					"format": "date-time"
				},
				"created_at": {
					"type": "string",
					"format": "date-time"
				},
				"updated_at": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"DevolutionRental": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"car_id": {
					"type": "string",
					"format": "uuid"
				},
				"user_id": {
					"type": "string",
					"format": "uuid"
				},
				"start_date": {
					"type": "string",
					"format": "date-time"
				},
				"end_date": {
					"type": "string",
					"format": "date-time"
				},
				"expected_return_date": {
					"type": "string",
					"format": "date-time"
				},
				"total": {
					"type": "number"
				},
				"created_at": {
					"type": "string",
					"format": "date-time"
				},
				"updated_at": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"AllUserRentals": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"car_id": {
						"type": "string",
						"format": "uuid"
					},
					"user_id": {
						"type": "string",
						"format": "uuid"
					},
					"start_date": {
						"type": "string",
						"format": "date-time"
					},
					"end_date": {
						"type": "string",
						"format": "date-time"
					},
					"expected_return_date": {
						"type": "string",
						"format": "date-time"
					},
					"total": {
						"type": "number"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"car": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"format": "uuid"
							},
							"available": {
								"type": "boolean"
							},
							"name": {
								"type": "string"
							},
							"description": {
								"type": "string"
							},
							"daily_rate": {
								"type": "number"
							},
							"license_plate": {
								"type": "string"
							},
							"fine_amount": {
								"type": "number"
							},
							"brand": {
								"type": "string"
							},
							"category_id": {
								"type": "string",
								"format": "uuid"
							},
							"created_at": {
								"type": "string",
								"format": "date-time"
							}
						}
					}
				}
			}
		},
		"ForgotPassword": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string",
					"format": "email"
				}
			}
		},
    "ResetPassword": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
		"AllSpecifications": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					}					
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}